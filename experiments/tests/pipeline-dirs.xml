<?xml version="1.0"?>


<!-- Test

Takes total number of inodes, and rounds down to the highest decimal place.
Then splits it 8


Math stuff:
total inodes = ${IMAGESIZE}*65525
decimals = log(total_inodes)/log(10)
largest div = 10**int(decimals)
number = int(total inodes / largest div)
total = number * largest div



total = int(${IMAGESIZE}*65525/10**int(log(${IMAGESIZE}*65525)/log(10)))*10**int( log(${IMAGESIZE}*65525)/log(10))

total dir = total/2

total * frac


-->

<data>
  <name>Pipeline Directories Test</name>
  <folder>Pipeline_Directories_Test</folder>

  <run>
    <name>2</name>
    <key>2</key>
    <image>dirs-[int(${IMAGESIZE}*65525/10**int(log(${IMAGESIZE}*65525)/log(10)))*10**int( log(${IMAGESIZE}*65525)/log(10))/2]_size-${IMAGESIZE}gb.img</image>
    <flags>-fFnttvx -g 12 -q 2 </flags>
    <buildflags> USER_CFLAGS='-D_SPIN_XCHG -D_REDUCE_OP_STRINGS -D_INTEL_CRC32C -D_PIPELINE_PARALLELISM -D_READ_DIR_BLOCKS=4 -D_FIX_CACHE -D_DBLIST_THRESHOLD=5000 -D_SCHEDULER -D_MIN_READ'</buildflags>
  </run>

  <run>
    <name>1-1</name>
    <key>1-1</key>
    <image>dirs-[int(${IMAGESIZE}*65525/10**int(log(${IMAGESIZE}*65525)/log(10)))*10**int( log(${IMAGESIZE}*65525)/log(10))/2]_size-${IMAGESIZE}gb.img</image>
    <flags>-fFnttvx -g 12 -q 1 -w 1</flags>
    <buildflags> USER_CFLAGS='-D_SPIN_XCHG -D_REDUCE_OP_STRINGS -D_INTEL_CRC32C -D_PIPELINE_PARALLELISM -D_READ_DIR_BLOCKS=4 -D_FIX_CACHE -D_DBLIST_THRESHOLD=5000 -D_SCHEDULER -D_MIN_READ'</buildflags>
  </run>

  <run>
    <name>2-0</name>
    <key>2-0</key>
    <image>dirs-[int(${IMAGESIZE}*65525/10**int(log(${IMAGESIZE}*65525)/log(10)))*10**int( log(${IMAGESIZE}*65525)/log(10))/2]_size-${IMAGESIZE}gb.img</image>
    <flags>-fFnttvx -g 12 -q 2 </flags>
    <buildflags> USER_CFLAGS='-D_SPIN_XCHG -D_REDUCE_OP_STRINGS -D_INTEL_CRC32C -D_PIPELINE_PARALLELISM -D_READ_DIR_BLOCKS=4 -D_FIX_CACHE -D_DBLIST_THRESHOLD=5000 -D_SCHEDULER -D_MIN_READ'</buildflags>
  </run>


  <run>
    <name>4</name>
    <key>4</key>
    <image>dirs-[int(${IMAGESIZE}*65525/10**int(log(${IMAGESIZE}*65525)/log(10)))*10**int( log(${IMAGESIZE}*65525)/log(10))/2]_size-${IMAGESIZE}gb.img</image>
    <flags>-fFnttvx -g 12 -q 4</flags>
    <buildflags> USER_CFLAGS='-D_SPIN_XCHG -D_REDUCE_OP_STRINGS -D_INTEL_CRC32C -D_PIPELINE_PARALLELISM -D_READ_DIR_BLOCKS=4 -D_FIX_CACHE -D_DBLIST_THRESHOLD=5000 -D_SCHEDULER -D_MIN_READ'</buildflags>
  </run>

  <run>
    <name>2-2</name>
    <key>2-2</key>
    <image>dirs-[int(${IMAGESIZE}*65525/10**int(log(${IMAGESIZE}*65525)/log(10)))*10**int( log(${IMAGESIZE}*65525)/log(10))/2]_size-${IMAGESIZE}gb.img</image>
    <flags>-fFnttvx -g 12 -q 2 -w 2</flags>
    <buildflags> USER_CFLAGS='-D_SPIN_XCHG -D_REDUCE_OP_STRINGS -D_INTEL_CRC32C -D_PIPELINE_PARALLELISM -D_READ_DIR_BLOCKS=4 -D_FIX_CACHE -D_DBLIST_THRESHOLD=5000 -D_SCHEDULER -D_MIN_READ'</buildflags>
  </run>

  <run>
    <name>1-3</name>
    <key>1-3</key>
    <image>dirs-[int(${IMAGESIZE}*65525/10**int(log(${IMAGESIZE}*65525)/log(10)))*10**int( log(${IMAGESIZE}*65525)/log(10))/2]_size-${IMAGESIZE}gb.img</image>
    <flags>-fFnttvx -g 12 -q 1 -w 3</flags>
    <buildflags> USER_CFLAGS='-D_SPIN_XCHG -D_REDUCE_OP_STRINGS -D_INTEL_CRC32C -D_PIPELINE_PARALLELISM -D_READ_DIR_BLOCKS=4 -D_FIX_CACHE -D_DBLIST_THRESHOLD=5000 -D_SCHEDULER -D_MIN_READ'</buildflags>
  </run>

  <run>
    <name>8</name>
    <key>8</key>
    <image>dirs-[int(${IMAGESIZE}*65525/10**int(log(${IMAGESIZE}*65525)/log(10)))*10**int( log(${IMAGESIZE}*65525)/log(10))/2]_size-${IMAGESIZE}gb.img</image>
    <flags>-fFnttvx -g 12 -q 8 </flags>
    <buildflags> USER_CFLAGS='-D_SPIN_XCHG -D_REDUCE_OP_STRINGS -D_INTEL_CRC32C -D_PIPELINE_PARALLELISM -D_READ_DIR_BLOCKS=4 -D_FIX_CACHE -D_DBLIST_THRESHOLD=5000 -D_SCHEDULER -D_MIN_READ'</buildflags>
  </run>

  <run>
    <name>4-4</name>
    <key>4-4</key>
    <image>dirs-[int(${IMAGESIZE}*65525/10**int(log(${IMAGESIZE}*65525)/log(10)))*10**int( log(${IMAGESIZE}*65525)/log(10))/2]_size-${IMAGESIZE}gb.img</image>
    <flags>-fFnttvx -g 12 -q 4 -w 4</flags>
    <buildflags> USER_CFLAGS='-D_SPIN_XCHG -D_REDUCE_OP_STRINGS -D_INTEL_CRC32C -D_PIPELINE_PARALLELISM -D_READ_DIR_BLOCKS=4 -D_FIX_CACHE -D_DBLIST_THRESHOLD=5000 -D_SCHEDULER -D_MIN_READ'</buildflags>
  </run>

  <run>
    <name>2-6</name>
    <key>2-6</key>
    <image>dirs-[int(${IMAGESIZE}*65525/10**int(log(${IMAGESIZE}*65525)/log(10)))*10**int( log(${IMAGESIZE}*65525)/log(10))/2]_size-${IMAGESIZE}gb.img</image>
    <flags>-fFnttvx -g 12 -q 2 -w 6</flags>
    <buildflags> USER_CFLAGS='-D_SPIN_XCHG -D_REDUCE_OP_STRINGS -D_INTEL_CRC32C -D_PIPELINE_PARALLELISM -D_READ_DIR_BLOCKS=4 -D_FIX_CACHE -D_DBLIST_THRESHOLD=5000 -D_SCHEDULER -D_MIN_READ'</buildflags>
  </run>


  <run>
    <name>16</name>
    <key>16</key>
    <image>dirs-[int(${IMAGESIZE}*65525/10**int(log(${IMAGESIZE}*65525)/log(10)))*10**int( log(${IMAGESIZE}*65525)/log(10))/2]_size-${IMAGESIZE}gb.img</image>
    <flags>-fFnttvx -g 12 -q 16</flags>
    <buildflags> USER_CFLAGS='-D_SPIN_XCHG -D_REDUCE_OP_STRINGS -D_INTEL_CRC32C -D_PIPELINE_PARALLELISM -D_READ_DIR_BLOCKS=4 -D_FIX_CACHE -D_DBLIST_THRESHOLD=5000 -D_SCHEDULER -D_MIN_READ'</buildflags>
  </run>

  <run>
    <name>8-8</name>
    <key>8-8</key>
    <image>dirs-[int(${IMAGESIZE}*65525/10**int(log(${IMAGESIZE}*65525)/log(10)))*10**int( log(${IMAGESIZE}*65525)/log(10))/2]_size-${IMAGESIZE}gb.img</image>
    <flags>-fFnttvx -g 12 -q 8 -w 8</flags>
    <buildflags> USER_CFLAGS='-D_SPIN_XCHG -D_REDUCE_OP_STRINGS -D_INTEL_CRC32C -D_PIPELINE_PARALLELISM -D_READ_DIR_BLOCKS=4 -D_FIX_CACHE -D_DBLIST_THRESHOLD=5000 -D_SCHEDULER -D_MIN_READ'</buildflags>
  </run>


  <run>
    <name>6-10</name>
    <key>6-10</key>
    <image>dirs-[int(${IMAGESIZE}*65525/10**int(log(${IMAGESIZE}*65525)/log(10)))*10**int( log(${IMAGESIZE}*65525)/log(10))/2]_size-${IMAGESIZE}gb.img</image>
    <flags>-fFnttvx -g 12 -q 6 -w 10</flags>
    <buildflags> USER_CFLAGS='-D_SPIN_XCHG -D_REDUCE_OP_STRINGS -D_INTEL_CRC32C -D_PIPELINE_PARALLELISM -D_READ_DIR_BLOCKS=4 -D_FIX_CACHE -D_DBLIST_THRESHOLD=5000 -D_SCHEDULER -D_MIN_READ'</buildflags>
  </run>


  <graph>
    <title>Pipeline Threads vs Time Image: dirs-[int(${IMAGESIZE}*65525/10**int(log(${IMAGESIZE}*65525)/log(10)))*10**int( log(${IMAGESIZE}*65525)/log(10))/2]_size-${IMAGESIZE}gb.img)</title>
    <fields>
      <field>Total</field>
    </fields>
    <xlabel>Pipeline Threads</xlabel>
    <ylabel>Time (Seconds)</ylabel>
  </graph>

</data>
